#
# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

import("//base/notification/ces_standard/event.gni")
import("//build/test.gni")

module_output_path = "ces_standard/mouduletest"

ohos_moduletest("CesPublishOrderedEventModuleTest") {
  module_out_path = module_output_path

  sources = [
    "//base/notification/ces_standard/cesfwk/services/test/mock/src/iservice_registry.cpp",
    "//base/notification/ces_standard/cesfwk/services/test/mock/src/mock_bundle_manager.cpp",
    "//base/notification/ces_standard/cesfwk/services/test/mock/src/mock_ipc.cpp",
    "//base/notification/ces_standard/cesfwk/services/test/mock/src/system_ability_manager.cpp",
    "//base/notification/ces_standard/cesfwk/services/test/mock/src/system_ability_manager_stub.cpp",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/src/bundlemgr/bundle_mgr_host.cpp",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/src/bundlemgr/bundle_mgr_proxy.cpp",
    "common_event_services_publish_ordered_module_test.cpp",
  ]

  configs = [ "//base/notification/ces_standard/test/systemtest/common/ces:cesfwk_kits_test_config" ]

  include_dirs = [
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/aafwk/standard/services/abilitymgr/include/",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler/include",
    "//foundation/appexecfwk/standard/services/bundlemgr/include",
    "//foundation/aafwk/standard/services/common/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include/bundlemgr",
    "//foundation/communication/ipc/ipc/dnetwork_temp",
    "//foundation/distributeddatamgr/distributeddatamgr/interfaces/innerkits/app_distributeddata/include",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    "//foundation/distributedschedule/dmsfwk/utils/native/include",
    "//foundation/distributedschedule/safwk/services/safwk/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/distributedschedule/samgr/services/lsamgr/include",
    "//foundation/distributedschedule/samgr/services/samgr/native/include",
    "//foundation/distributedschedule/samgr/utils/native/include",
    "//base/notification/ces_standard/cesfwk/innerkits/include",
    "//base/notification/ces_standard/cesfwk/kits/native/include",
    "//base/notification/ces_standard/cesfwk/services/include",
    "//base/notification/ces_standard/cesfwk/services/test/unittest/mock/include",
    "//base/notification/ces_standard/common/log/include",
    "//third_party/json/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "//base/notification/ces_standard/cesfwk/innerkits:cesfwk_innerkits",
    "//base/notification/ces_standard/cesfwk/kits/native:cesfwk_kits",
    "//base/notification/ces_standard/cesfwk/services:cesfwk_services",
    "//base/notification/ces_standard/common:libevent_common",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want",
    "//foundation/appexecfwk/standard/common:libappexecfwk_common",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//foundation/appexecfwk/standard/services/bundlemgr:libbms",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  defines = [
    "APP_LOG_TAG = \"CesFwkKitsTest\"",
    "LOG_DOMAIN = 0xD002200",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "ipc:libdbinder",
  ]
}

group("moduletest_cesOrdered") {
  testonly = true

  deps = [ ":CesPublishOrderedEventModuleTest" ]
}
